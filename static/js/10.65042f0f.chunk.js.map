{"version":3,"sources":["components/shared/Spinner.js","domain/api/User.js","interfaces/apiAdapter.js","useCases/loginUserWithToken.js","containers/MagicLogin.js","hooks/useLoginWithToken.js","infrastructure/config.js","hooks/useAsyncSafeState.js","components/shared/CenteredContainer.js","styles/colors.js","domain/User.js"],"names":["spinAnimation","keyframes","SpinAnimation","styled","div","sizes","sm","md","lg","Spinner","size","props","ApiUser","id","name","email","token","this","apiUserFromResponse","response","a","json","createRequestInit","data","method","body","JSON","stringify","headers","login","loginToken","config","getConfig","apiBaseUrl","Error","fetch","ok","console","error","mapApiUserToDomain","apiUser","User","AccessToken","getParamsFromUrl","queryString","window","location","search","urlParams","URLSearchParams","params","Object","fromEntries","entries","loginUserWithToken","loginApi","MagicLogin","useAsyncSafeState","loading","setLoading","setError","user","setUser","useCallback","useEffect","useMemo","useLoginWithToken","setToken","useAuth","history","useHistory","accessToken","push","CenteredContainer","order","offset","style","textAlign","color","semanticColorTokens","primary","theme","CONFIG_GLOBAL_KEY","keys","length","REACT_APP_API_URL","chatPollIntervalSeconds","CHAT_POLL_INTERVAL","chatPollingTimeSeconds","intialValue","mountedRef","useRef","useState","state","setState","current","update","Container","signupErrorMessage"],"mappings":"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","file":"static/js/10.65042f0f.chunk.js","sourcesContent":["import React from 'react';\nimport { CgSpinner } from 'react-icons/cg';\nimport styled, { keyframes } from 'styled-components';\n\nconst spinAnimation = keyframes`\n  0% {\n    transform: rotateZ(0)\n  }\n\n  100% {\n    transform: rotateZ(360deg)\n  }\n`;\n\nconst SpinAnimation = styled.div`\n  animation: ${spinAnimation} infinite;\n  animation-duration: 1s;\n  animation-timing-function: linear;\n  display: inline-block;\n`;\n\nconst sizes = {\n  sm: 32,\n  md: 64,\n  lg: 128\n};\n\nexport const Spinner = ({ size = 'sm', ...props }) => {\n  return (\n    <SpinAnimation>\n      <CgSpinner size={sizes[size]} {...props} />\n    </SpinAnimation>\n  );\n};\n","export class ApiUser {\n  constructor({ id, name, email, token }) {\n    this.id = id;\n    this.name = name;\n    this.email = email;\n    this.token = token;\n  }\n}\n","import { ApiUser } from '../domain/api/User';\nimport { getConfig } from '../infrastructure/config';\n\nconst apiUserFromResponse = async (response) =>\n  new ApiUser(await response.json());\n\nfunction createRequestInit(data, method = 'POST') {\n  return {\n    method,\n    body: JSON.stringify(data),\n    headers: {\n      'content-type': 'application/json'\n    }\n  };\n}\n\nexport async function login({ email, loginToken }) {\n  try {\n    const config = getConfig();\n\n    if (!config.apiBaseUrl) {\n      throw new Error('apiBaseUrl is not set in config');\n    }\n    const response = await fetch(\n      `${config.apiBaseUrl}/api/v1/login`,\n      createRequestInit({ email, loginToken })\n    );\n\n    if (!response.ok) {\n      console.error(response);\n      throw new Error('Error making request to register user');\n    }\n\n    return await apiUserFromResponse(response);\n  } catch (err) {\n    console.error('Error logging in user with token', err);\n    throw err;\n  }\n}\n","import { AccessToken } from '../domain/AccessToken';\nimport { User } from '../domain/User';\nimport { login as loginApi } from '../interfaces/apiAdapter';\n\nconst mapApiUserToDomain = (apiUser) =>\n  new User(\n    apiUser.id,\n    apiUser.name,\n    apiUser.email,\n    new AccessToken(apiUser.token)\n  );\n\nfunction getParamsFromUrl() {\n  const queryString = window.location.search;\n  const urlParams = new URLSearchParams(queryString);\n  const params = Object.fromEntries(urlParams.entries());\n\n  if (!params.loginToken || !params.email) {\n    throw new Error('loginToken and/or email are not in the url');\n  }\n\n  return {\n    loginToken: params.loginToken,\n    email: params.email\n  };\n}\n\nexport async function loginUserWithToken() {\n  try {\n    const apiUser = await loginApi(getParamsFromUrl());\n    return mapApiUserToDomain(apiUser);\n  } catch (err) {\n    console.error('Error logging user in', err);\n    throw err;\n  }\n}\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { CardTitle, Row, Col, Alert } from 'shards-react';\n\nimport { CenteredContainer } from '../components/shared/CenteredContainer';\nimport { Spinner } from '../components/shared/Spinner';\nimport { useAuth } from '../context/AuthContext';\nimport { useLoginWithToken } from '../hooks/useLoginWithToken';\nimport { semanticColorTokens } from '../styles/colors';\n\nexport default function MagicLogin() {\n  const { user, error } = useLoginWithToken();\n  const { setToken } = useAuth();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (user) {\n      setToken(user.accessToken);\n      history.push('/');\n    }\n  }, [user, history, setToken]);\n\n  return (\n    <CenteredContainer>\n      <Row>\n        <Col\n          sm={{ size: 12, order: 2, offset: 0 }}\n          style={{ textAlign: 'center' }}\n        >\n          <CardTitle size=\"lg\">Logging you in</CardTitle>\n          <Spinner size=\"md\" color={semanticColorTokens.primary} />\n          {error && (\n            <Alert theme=\"light\">\n              There was a problem logging you <br />\n              in with token. Please try later\n            </Alert>\n          )}\n        </Col>\n      </Row>\n    </CenteredContainer>\n  );\n}\n","import { useCallback } from 'react';\nimport { useEffect } from 'react';\nimport { useMemo } from 'react';\nimport { loginUserWithToken } from '../useCases/loginUserWithToken';\nimport useAsyncSafeState from './useAsyncSafeState';\n\nexport function useLoginWithToken() {\n  const [loading, setLoading] = useAsyncSafeState(false);\n  const [error, setError] = useAsyncSafeState(null);\n  const [user, setUser] = useAsyncSafeState(null);\n\n  const login = useCallback(async () => {\n    setLoading(true);\n\n    try {\n      const user = await loginUserWithToken();\n      setUser(user);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [setLoading, setError, setUser]);\n\n  useEffect(() => {\n    login();\n  }, [login]);\n\n  return useMemo(\n    () => ({\n      loading,\n      error,\n      user\n    }),\n    [loading, error, user]\n  );\n}\n","const CONFIG_GLOBAL_KEY = '__RUNTIME_CONFIG__';\nlet config = {};\n\nexport function getConfig() {\n  if (!(CONFIG_GLOBAL_KEY in window)) {\n    return config;\n  }\n\n  if (Object.keys(config).length === 0) {\n    config = {\n      apiBaseUrl: window[CONFIG_GLOBAL_KEY].REACT_APP_API_URL,\n      chatPollIntervalSeconds:\n        window[CONFIG_GLOBAL_KEY].CHAT_POLL_INTERVAL || 10,\n      chatPollingTimeSeconds: 300\n    };\n\n    delete window[CONFIG_GLOBAL_KEY];\n  }\n\n  return config;\n}\n","import { useRef, useEffect, useState, useCallback } from 'react';\n\nfunction useAsyncSafeState(intialValue) {\n  const mountedRef = useRef(false);\n  const [state, setState] = useState(intialValue);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  const safeSetState = useCallback(\n    (update) => {\n      if (mountedRef.current) {\n        setState(update);\n      }\n    },\n    [setState]\n  );\n\n  return [state, safeSetState];\n}\n\nexport default useAsyncSafeState;\n","import { Container } from 'shards-react';\nimport styled from 'styled-components';\n\nexport const CenteredContainer = styled(Container)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 1rem;\n  flex-wrap: wrap;\n  min-height: calc(100% - 92px);\n\n  > *:first-child {\n    flex-basis: auto;\n  }\n`;\n","export const colorTokens = {\n  green: '#17c671',\n  red: '#c4183c'\n};\n\nexport const semanticColorTokens = {\n  primary: colorTokens.green,\n  signupErrorMessage: colorTokens.red\n};\n","export class User {\n  constructor(id, name, email, token) {\n    this.id = id;\n    this.name = name;\n    this.email = email;\n    this.accessToken = token;\n  }\n}\n"],"sourceRoot":""}