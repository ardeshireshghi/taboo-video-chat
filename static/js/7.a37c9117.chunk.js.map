{"version":3,"sources":["components/SignUpForm/SignUpForm.js","useCases/registerUser.js","containers/SignUp.js","hooks/useSignUp.js","infrastructure/config.js","hooks/useAsyncSafeState.js","components/shared/CenteredContainer.js","components/shared/DefaultCard.js","components/shared/ButtonWithLoading.js","styles/colors.js","domain/User.js"],"names":["ErrorMessage","styled","div","semanticColorTokens","signupErrorMessage","SignUpForm","onSubmit","useForm","control","handleSubmit","useState","submitting","setSubmitting","data","name","rules","required","render","field","onChange","onBlur","value","ref","fieldState","invalid","isTouched","error","htmlFor","size","id","valid","placeholder","innerRef","pattern","type","ButtonWithLoading","block","pill","theme","isLoading","registerUser","a","email","config","getConfig","apiBaseUrl","Error","fetch","method","body","JSON","stringify","headers","response","ok","console","json","token","User","AccessToken","SignUpLoginContainer","SignUp","history","useHistory","useAsyncSafeState","loading","setLoading","setError","user","setUser","submit","useCallback","useMemo","useSignUp","setToken","useAuth","useEffect","accessToken","push","CenteredContainer","sm","order","offset","DefaultCard","formData","to","CONFIG_GLOBAL_KEY","window","Object","keys","length","REACT_APP_API_URL","chatPollIntervalSeconds","CHAT_POLL_INTERVAL","chatPollingTimeSeconds","intialValue","mountedRef","useRef","state","setState","current","update","Container","Card","attrs","outline","spinAnimation","keyframes","SpinAnimation","ButtonSpinnerWrapper","children","props","primary","this"],"mappings":"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","file":"static/js/7.a37c9117.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Form, FormInput, FormGroup } from 'shards-react';\nimport { Controller, useForm } from 'react-hook-form';\nimport { ButtonWithLoading } from '../shared/ButtonWithLoading';\nimport styled from 'styled-components';\nimport { semanticColorTokens } from '../../styles/colors';\n\nconst ErrorMessage = styled.div`\n  color: ${semanticColorTokens.signupErrorMessage};\n  font-size: 0.9rem;\n`;\n\nexport default function SignUpForm({ onSubmit }) {\n  const { control, handleSubmit } = useForm();\n  const [submitting, setSubmitting] = useState(false);\n\n  const submitHandler = (data) => {\n    setSubmitting(true);\n    onSubmit(data);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(submitHandler)}>\n      <FormGroup>\n        <Controller\n          control={control}\n          name=\"name\"\n          rules={{\n            required: true\n          }}\n          render={({\n            field: { onChange, onBlur, value, name, ref },\n            fieldState: { invalid, isTouched, error }\n          }) => (\n            <>\n              <label htmlFor=\"#name\">Name</label>\n\n              <FormInput\n                onBlur={onBlur}\n                onChange={onChange}\n                size=\"lg\"\n                value={value}\n                name={name}\n                id={`#${name}`}\n                valid={isTouched && !invalid}\n                invalid={invalid}\n                placeholder=\"e.g. John\"\n                innerRef={ref}\n              />\n              {error && <ErrorMessage>Please tell us your name</ErrorMessage>}\n            </>\n          )}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Controller\n          control={control}\n          name=\"email\"\n          rules={{\n            required: true,\n            pattern: /^[^@ ]+@[^@ ]+\\.[^@ .]{2,}$/\n          }}\n          render={({\n            field: { onChange, onBlur, value, name, ref },\n            fieldState: { invalid, isTouched, error }\n          }) => {\n            return (\n              <>\n                <label htmlFor=\"#email\">Email</label>\n                <FormInput\n                  onBlur={onBlur}\n                  onChange={onChange}\n                  size=\"lg\"\n                  value={value}\n                  name={name}\n                  id={`#${name}`}\n                  valid={isTouched && !invalid}\n                  invalid={invalid}\n                  placeholder=\"e.g. john@email.com\"\n                  innerRef={ref}\n                />\n                {error && error.type === 'required' && (\n                  <ErrorMessage>Please tell us your email address</ErrorMessage>\n                )}\n\n                {error && error.type === 'pattern' && (\n                  <ErrorMessage>Email address is not valid</ErrorMessage>\n                )}\n              </>\n            );\n          }}\n        />\n      </FormGroup>\n      <FormGroup>\n        <ButtonWithLoading\n          size=\"lg\"\n          block\n          pill\n          type=\"submit\"\n          theme=\"success\"\n          isLoading={submitting}\n        >\n          Sign up\n        </ButtonWithLoading>\n      </FormGroup>\n    </Form>\n  );\n}\n","import { AccessToken } from '../domain/AccessToken';\nimport { User } from '../domain/User';\nimport { getConfig } from '../infrastructure/config';\n\nexport async function registerUser({ email, name }) {\n  try {\n    const config = getConfig();\n\n    if (!config.apiBaseUrl) {\n      throw new Error('apiBaseUrl is not set in config');\n    }\n\n    const response = await fetch(`${config.apiBaseUrl}/api/v1/user`, {\n      method: 'POST',\n      body: JSON.stringify({ email, name }),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n\n    if (!response.ok) {\n      console.error(response);\n      throw new Error('Error making request to register user');\n    }\n    const { token, id } = await response.json();\n    return new User(id, name, email, new AccessToken(token));\n  } catch (err) {\n    console.error('Error registering user', err);\n    throw err;\n  }\n}\n","import React from 'react';\nimport { CardTitle, CardBody, Row, Col, Alert } from 'shards-react';\n\nimport { useHistory, Link } from 'react-router-dom';\n\nimport { SignUpForm } from '../components/SignUpForm';\nimport { CenteredContainer } from '../components/shared/CenteredContainer';\nimport { useSignUp } from '../hooks/useSignUp';\nimport { useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { DefaultCard } from '../components/shared/DefaultCard';\nimport styled from 'styled-components';\n\nconst SignUpLoginContainer = styled.div`\n  text-align: center;\n  line-height: 2rem;\n`;\n\nexport default function SignUp() {\n  let history = useHistory();\n  const { user, submit, error } = useSignUp();\n  const { setToken } = useAuth();\n\n  const handleSubmit = (formData) => {\n    submit(formData);\n  };\n\n  useEffect(() => {\n    if (user) {\n      setToken(user.accessToken);\n      history.push('/');\n    }\n  }, [user, history, setToken]);\n\n  return (\n    <CenteredContainer>\n      <Row>\n        <Col sm={{ size: 12, order: 2, offset: 0 }}>\n          <DefaultCard>\n            <CardBody>\n              <CardTitle size=\"lg\">Sign up for Taboo</CardTitle>\n              <SignUpForm onSubmit={handleSubmit} />\n              <SignUpLoginContainer>\n                or <br />\n                <Link to=\"/login\">Log in</Link>\n              </SignUpLoginContainer>\n\n              {error && (\n                <Alert theme=\"danger\">\n                  There was a problem signing you up. Please try later\n                </Alert>\n              )}\n            </CardBody>\n          </DefaultCard>\n        </Col>\n      </Row>\n    </CenteredContainer>\n  );\n}\n","import { useCallback } from 'react';\nimport { useMemo } from 'react';\nimport { registerUser } from '../useCases/registerUser';\nimport useAsyncSafeState from './useAsyncSafeState';\n\nexport function useSignUp() {\n  const [loading, setLoading] = useAsyncSafeState(false);\n  const [error, setError] = useAsyncSafeState(null);\n  const [user, setUser] = useAsyncSafeState(null);\n\n  const submit = useCallback(\n    async ({ email, name }) => {\n      setLoading(true);\n\n      try {\n        const user = await registerUser({ email, name });\n        setUser(user);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    },\n    [setLoading, setError, setUser]\n  );\n\n  return useMemo(\n    () => ({\n      loading,\n      error,\n      submit,\n      user\n    }),\n    [loading, error, submit, user]\n  );\n}\n","const CONFIG_GLOBAL_KEY = '__RUNTIME_CONFIG__';\nlet config = {};\n\nexport function getConfig() {\n  if (!(CONFIG_GLOBAL_KEY in window)) {\n    return config;\n  }\n\n  if (Object.keys(config).length === 0) {\n    config = {\n      apiBaseUrl: window[CONFIG_GLOBAL_KEY].REACT_APP_API_URL,\n      chatPollIntervalSeconds:\n        window[CONFIG_GLOBAL_KEY].CHAT_POLL_INTERVAL || 10,\n      chatPollingTimeSeconds: 300\n    };\n\n    delete window[CONFIG_GLOBAL_KEY];\n  }\n\n  return config;\n}\n","import { useRef, useEffect, useState, useCallback } from 'react';\n\nfunction useAsyncSafeState(intialValue) {\n  const mountedRef = useRef(false);\n  const [state, setState] = useState(intialValue);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  const safeSetState = useCallback(\n    (update) => {\n      if (mountedRef.current) {\n        setState(update);\n      }\n    },\n    [setState]\n  );\n\n  return [state, safeSetState];\n}\n\nexport default useAsyncSafeState;\n","import { Container } from 'shards-react';\nimport styled from 'styled-components';\n\nexport const CenteredContainer = styled(Container)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 1rem;\n  flex-wrap: wrap;\n  min-height: calc(100% - 92px);\n\n  > *:first-child {\n    flex-basis: auto;\n  }\n`;\n","import { Card } from 'shards-react';\nimport styled from 'styled-components';\n\nexport const DefaultCard = styled(Card).attrs({\n  outline: false\n})`\n  width: 400px;\n  max-width: 100%;\n`;\n","import React from 'react';\nimport { CgSpinner } from 'react-icons/cg';\nimport { Button } from 'shards-react';\nimport styled, { keyframes } from 'styled-components';\n\nconst spinAnimation = keyframes`\n  0% {\n    transform: rotateZ(0)\n  }\n\n  100% {\n    transform: rotateZ(360deg)\n  }\n`;\n\nconst SpinAnimation = styled.div`\n  animation: ${spinAnimation} infinite;\n  animation-duration: 1s;\n  animation-timing-function: linear;\n`;\nconst ButtonSpinnerWrapper = styled.div`\n  margin-left: 0.5rem;\n  display: inline-block;\n  line-height: 0;\n`;\n\nexport const ButtonWithLoading = ({\n  isLoading = false,\n  children,\n  ...props\n}) => {\n  return (\n    <Button {...props}>\n      {children}\n      {isLoading && (\n        <ButtonSpinnerWrapper>\n          <SpinAnimation>\n            <CgSpinner />\n          </SpinAnimation>\n        </ButtonSpinnerWrapper>\n      )}\n    </Button>\n  );\n};\n","export const colorTokens = {\n  green: '#17c671',\n  red: '#c4183c'\n};\n\nexport const semanticColorTokens = {\n  primary: colorTokens.green,\n  signupErrorMessage: colorTokens.red\n};\n","export class User {\n  constructor(id, name, email, token) {\n    this.id = id;\n    this.name = name;\n    this.email = email;\n    this.accessToken = token;\n  }\n}\n"],"sourceRoot":""}